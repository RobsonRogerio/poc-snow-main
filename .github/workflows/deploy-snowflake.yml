name: Deploy Snowflake View

env:
  SCHEMA_PRD: PRD

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  dev:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libaio1 libncurses6 alien

      - name: Download and install SnowSQL via RPM
        run: |
          wget https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.4/linux_x86_64/snowflake-snowsql-1.4.1-1.x86_64.rpm
          sudo alien -i snowflake-snowsql-1.4.1-1.x86_64.rpm

      - name: Add SnowSQL to PATH
        run: echo "/usr/bin" >> $GITHUB_PATH

      - name: Check SnowSQL installation
        run: which snowsql && snowsql -v

      - name: Run changed SQL scripts on DEV
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
        run: |
          set -e
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            MODIFIED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.sql$' || true)
          else
            MODIFIED_FILES=$(git show --pretty="" --name-only HEAD | grep '\.sql$' || true)
          fi
          if [ -z "$MODIFIED_FILES" ]; then
            echo "No .sql files changed."
            exit 0
          fi
          for file in $MODIFIED_FILES; do
            echo "Running $file on schema DEV"
            OUTPUT=$(snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER \
              -d POC -s DEV \
              -h "$SNOWSQL_ACCOUNT.snowflakecomputing.com" -p 443 \
              -f $file)
            echo "$OUTPUT"
            if [[ "$file" == sql/procedures/* ]]; then
              PROC_NAME=$(echo "$OUTPUT" | grep -oP 'Function \K[^ ]+' | head -1)
              if [[ -n "$PROC_NAME" ]]; then
                echo "Calling procedure $PROC_NAME on schema DEV"
                snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER \
                  -d POC -s DEV \
                  -h "$SNOWSQL_ACCOUNT.snowflakecomputing.com" -p 443 \
                  -q "CALL $PROC_NAME();"
              else
                echo "Could not extract the procedure name from the SnowSQL output for file $file"
              fi
            fi
          done

  qa:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-22.04
    needs: dev
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libaio1 libncurses6 alien

      - name: Download and install SnowSQL via RPM
        run: |
          wget https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.4/linux_x86_64/snowflake-snowsql-1.4.1-1.x86_64.rpm
          sudo alien -i snowflake-snowsql-1.4.1-1.x86_64.rpm

      - name: Add SnowSQL to PATH
        run: echo "/usr/bin" >> $GITHUB_PATH

      - name: Check SnowSQL installation
        run: which snowsql && snowsql -v

      - name: Run changed SQL scripts on QA
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
        run: |
          set -e
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            MODIFIED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.sql$' || true)
          else
            MODIFIED_FILES=$(git show --pretty="" --name-only HEAD | grep '\.sql$' || true)
          fi
          if [ -z "$MODIFIED_FILES" ]; then
            echo "No .sql files changed."
            exit 0
          fi
          for file in $MODIFIED_FILES; do
            echo "Running $file on schema QA"
            OUTPUT=$(snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER \
              -d POC -s QA \
              -h "$SNOWSQL_ACCOUNT.snowflakecomputing.com" -p 443 \
              -f $file)
            echo "$OUTPUT"
            if [[ "$file" == sql/procedures/* ]]; then
              PROC_NAME=$(echo "$OUTPUT" | grep -oP 'Function \K[^ ]+' | head -1)
              if [[ -n "$PROC_NAME" ]]; then
                echo "Calling procedure $PROC_NAME on schema QA"
                snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER \
                  -d POC -s QA \
                  -h "$SNOWSQL_ACCOUNT.snowflakecomputing.com" -p 443 \
                  -q "CALL $PROC_NAME();"
              else
                echo "Could not extract the procedure name from the SnowSQL output for file $file"
              fi
            fi
          done

  prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libaio1 libncurses6 alien

      - name: Download and install SnowSQL via RPM
        run: |
          wget https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.4/linux_x86_64/snowflake-snowsql-1.4.1-1.x86_64.rpm
          sudo alien -i snowflake-snowsql-1.4.1-1.x86_64.rpm

      - name: Add SnowSQL to PATH
        run: echo "/usr/bin" >> $GITHUB_PATH

      - name: Check SnowSQL installation
        run: which snowsql && snowsql -v

      - name: Run changed SQL scripts
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
        run: |
          set -e
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            MODIFIED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.sql$' || true)
          else
            MODIFIED_FILES=$(git show --pretty="" --name-only HEAD | grep '\.sql$' || true)
          fi
          if [ -z "$MODIFIED_FILES" ]; then
            echo "No .sql files changed."
            exit 0
          fi
          for file in $MODIFIED_FILES; do
            echo "Running $file on schema ${{ env.SCHEMA_PRD }}"
            OUTPUT=$(snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER \
              -d POC -s ${{ env.SCHEMA_PRD }} \
              -h "$SNOWSQL_ACCOUNT.snowflakecomputing.com" -p 443 \
              -f $file)
            echo "$OUTPUT"
            if [[ "$file" == sql/procedures/* ]]; then
              PROC_NAME=$(echo "$OUTPUT" | grep -oP 'Function \K[^ ]+' | head -1)
              if [[ -n "$PROC_NAME" ]]; then
                echo "Calling procedure $PROC_NAME on schema ${{ env.SCHEMA_PRD }}"
                snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER \
                  -d POC -s ${{ env.SCHEMA_PRD }} \
                  -h "$SNOWSQL_ACCOUNT.snowflakecomputing.com" -p 443 \
                  -q "CALL $PROC_NAME();"
              else
                echo "Could not extract the procedure name from the SnowSQL output for file $file"
              fi
            fi
          done